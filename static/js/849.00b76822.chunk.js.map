{"version":3,"file":"static/js/849.00b76822.chunk.js","mappings":"sPACA,EAAwB,4BAAxB,EAA2D,2BAA3D,EAA6F,2BAA7F,EAAmI,+BAAnI,EAAyK,2B,SCoCzK,EAhCoB,WAClB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAeJ,GAFtB,gBAERK,EAFQ,EAERA,KACRN,EAAUM,EAAKC,SAHC,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBN,GACD,GAAE,CAACH,IAEJ,IAAMU,EAAWZ,EAAOa,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC1B,gBAAaC,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAAsCH,MACtC,cAAGE,UAAWC,EAAd,SAAyBF,MAFlBb,EADiB,IAO5B,OACE,iCACE,eAAIc,UAAWC,EAAf,sBACA,eAAID,UAAWC,EAAf,SAA4C,IAAlBjB,EAAOkB,OAAeN,EAAW,+CAGhE,C,2JCjCKO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAmB,WAC9B,OAAON,EAASO,IAAI,sBACrB,EAEYC,EAAgB,SAAAzB,GAC3B,OAAOiB,EAASO,IAAT,iBAAuBxB,GAC/B,EAEY0B,EAAkB,SAACC,GAAsB,IAAdC,EAAa,uDAAN,EAC7C,OAAOX,EAASO,IAAT,8BAAoCG,GAAU,CACnDP,OAAQ,CACNO,OAAAA,EACAC,KAAAA,IAGL,EAEYC,EAAc,SAAA7B,GAAE,OAAIiB,EAASO,IAAT,iBAAuBxB,EAAvB,YAAJ,EAEhBI,EAAiB,SAAAJ,GAAE,OAAIiB,EAASO,IAAT,iBAAuBxB,EAAvB,YAAJ,C","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/reviews-page.module.scss?bf60","pages/ReviewsPage/ReviewsPage.jsx","shared/api/popularMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"reviews-page_title__V7sPE\",\"list\":\"reviews-page_list__zlRIh\",\"item\":\"reviews-page_item__E9DZd\",\"subtitle\":\"reviews-page_subtitle__59MA1\",\"text\":\"reviews-page_text__n2Onk\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from '../../shared/api/popularMovies';\nimport css from './reviews-page.module.scss';\n\nconst ReviewsPage = () => {\n  const [review, setReview] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      try {\n        const { data } = await getReviewsById(id);\n        setReview(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchReview();\n  }, [id]);\n\n  const elements = review.map(({ id, author, content }) => (\n    <li key={id} className={css.item}>\n      <h3 className={css.subtitle}>Author: {author}</h3>\n      <p className={css.text}>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <h2 className={css.title}>REVIEWS</h2>\n      <ul className={css.list}>{review.length !== 0 ? elements : \"We don't have any reviews for this movie\"}</ul>\n    </>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '77da55832de63d39c695f15c5d27b3f3',\n    language: 'en-US',\n  },\n});\n\nexport const getPopularMovies = () => {\n  return instance.get('/trending/movie/day');\n};\n\nexport const getMoviesById = id => {\n  return instance.get(`/movie/${id}`);\n};\n\nexport const getSearchMovies = (search, page = 1) => {\n  return instance.get(`/search/movie?query=${search}`, {\n    params: {\n      search,\n      page,\n    },\n  });\n};\n\nexport const getCastById = id => instance.get(`/movie/${id}/credits`);\n\nexport const getReviewsById = id => instance.get(`/movie/${id}/reviews`);\n"],"names":["useState","review","setReview","id","useParams","useEffect","fetchReview","getReviewsById","data","results","console","log","message","elements","map","author","content","className","css","length","instance","axios","baseURL","params","api_key","language","getPopularMovies","get","getMoviesById","getSearchMovies","search","page","getCastById"],"sourceRoot":""}